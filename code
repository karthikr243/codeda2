//twoSum
class Solution(object):
    def twoSum(self, nums, target):
        for i in range(len(nums)):
            for j in range(i+1,len(nums)):
                if nums[i]+nums[j]==target:
                    return[i,j]
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
//pallindrome       
bool isPalindrome(int x){
    if(x<0) return false;
    long y=0;
    long xx=x;
    while(xx>0){
        y=y*10+xx%10;
        xx/=10;
    }
    return(y==x);

}

//search integer
int searchInsert(int* nums, int numsSize, int target){
    int index=numsSize;
    for(int i=0;i<numsSize;i++){
        if (nums[i]==target)
            return i;
        else if(nums[i]>target)
            return i;
        else if(target>nums[i]&&i==numsSize-1){
            return index;
        }
    }
    return index;
}

//single number
int singleNumber(int* nums, int numsSize){
    int i,j;
    for(i=0;i<numsSize;i++){
        int c=0;
        for(j=0;j<numsSize;j++){
            if(nums[i]==nums[j]){
            c++;
        }
    }
        if(c==1){
            return nums[i];
        }
    }
    return 0;

}   

//missing number
int missingNumber(int* nums, int numsSize){
    int i,j,c;
    for(i=0;i<numsSize+1;i++){
        c=0;
        for(j=0;j<numsSize;j++){
            if(i==nums[j]){
                c+=1;
            }
        }
    if(c==0){
        return i;
    }    
    }
return 0;
}
